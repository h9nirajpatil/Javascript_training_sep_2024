JavaScript Comments -

JavaScript comments are lines of code that are not executed and are primarily used to explain the code, making it more understandable for developers. Comments can also be used to temporarily disable code during testing.



There are two types of comments in JavaScript:

Single-Line Comments
Multi-Line Comments

__________________________________________________________________________________

1. Single-Line Comments
Single-line comments start with //. Any text after // on that line is ignored by JavaScript.

Example 1: Single-line comments explaining code

// Change heading content
document.getElementById("myH").innerHTML = "My First Page";

// Change paragraph content
document.getElementById("myP").innerHTML = "My first paragraph.";
In the above code, the // is used to add comments before each line to explain what that line of code is doing.

Example 2: Single-line comments at the end of code

let x = 5;      // Declare x, give it the value of 5
let y = x + 2;  // Declare y, give it the value of x + 2
Here, the comments explain the purpose of each variable assignment, but they are placed at the end of each line.

__________________________________________________________________________________

2. Multi-Line Comments
Multi-line comments start with /* and end with */. Any text between these markers is ignored by JavaScript. Multi-line comments are often used for longer explanations or documentation purposes.

Example 1: Multi-line comment block

/*
The code below changes the heading with id = "myH"
and the paragraph with id = "myP" on the web page:
*/
document.getElementById("myH").innerHTML = "My First Page";
document.getElementById("myP").innerHTML = "My first paragraph.";
This multi-line comment explains the purpose of the code block that follows.

__________________________________________________________________________________

Using Comments to Prevent Code Execution
Sometimes, during testing, you may want to prevent certain lines of code from executing. This can be done by commenting out those lines.

Example: Preventing the execution of a single line of code

// document.getElementById("myH").innerHTML = "My First Page";
document.getElementById("myP").innerHTML = "My first paragraph.";
In this example, the first line of code is turned into a comment, so it won't be executed.

Example: Preventing multiple lines of code from executing

/*
document.getElementById("myH").innerHTML = "My First Page";
document.getElementById("myP").innerHTML = "My first paragraph.";
*/
Here, both lines are wrapped inside a multi-line comment block, so they won't be executed.

__________________________________________________________________________________

When to Use Comments -

Single-line comments are typically used for brief explanations.

Multi-line comments are useful for explaining longer code blocks or for documentation purposes.
Comments for debugging/testing are used when you want to temporarily disable parts of the code without deleting it.

Key Points:

Comments do not affect the execution of the program.
It is best practice to add comments to complex code to make it more understandable for future developers (or yourself).
Always strive to write clear, concise comments to explain the "why" of your code, not just the "what."
__________________________________________________________________________________