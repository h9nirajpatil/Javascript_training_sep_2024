JavaScript Output
JavaScript provides various methods to display or output data. Each method has its own use case depending on what you want to achieve:

__________________________________________________________________________________

1. Using innerHTML
The innerHTML property allows you to modify the content of an HTML element.

Example:

<!DOCTYPE html>
<html>
<body>

<h1>My First Web Page</h1>
<p>My First Paragraph</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 5 + 6;  // Output: 11
</script>

</body>
</html>
Explanation:

document.getElementById("demo") accesses the HTML element with the id "demo".
innerHTML sets the content of this element to the result of 5 + 6, which is 11.
Use Case:

Displaying dynamic content within HTML elements.

__________________________________________________________________________________

2. Using document.write()
The document.write() method writes directly to the HTML document.

Example:

<!DOCTYPE html>
<html>
<body>

<h1>My First Web Page</h1>
<p>My first paragraph.</p>

<script>
document.write(5 + 6);  // Output: 11
</script>

</body>
</html>
Important Note:

Using document.write() after the document is fully loaded will overwrite the entire HTML content of the page.
Example of Overwriting Content:

<!DOCTYPE html>
<html>
<body>

<h1>My First Web Page</h1>
<p>My first paragraph.</p>

<button type="button" onclick="document.write(5 + 6)">Try it</button>

</body>
</html>
Explanation:

Clicking the button will clear all existing content and replace it with the result of 5 + 6.
Use Case:

Mostly used for quick testing. Avoid using in production code because it can disrupt the page content.

__________________________________________________________________________________

3. Using window.alert()
The window.alert() method displays an alert box with a specified message.

Example:

<!DOCTYPE html>
<html>
<body>

<h1>My First Web Page</h1>
<p>My first paragraph.</p>

<script>
window.alert(5 + 6);  // Shows an alert box with the value 11
</script>

</body>
</html>
Explanation:

window.alert(5 + 6) displays an alert box with the result of 5 + 6, which is 11.
Shortcut:

The window keyword is optional: alert(5 + 6); will work the same way.
Use Case:

Useful for debugging or providing immediate feedback to users.

__________________________________________________________________________________

4. Using console.log()
The console.log() method outputs data to the browser's console.

Example:

<!DOCTYPE html>
<html>
<body>

<script>
console.log(5 + 6);  // Output: 11 in the browser console
</script>

</body>
</html>
Explanation:

console.log(5 + 6) outputs the result to the browserâ€™s console, which is useful for debugging.
Use Case:

Essential for debugging and checking the values of variables during development.
5. JavaScript Print
JavaScript does not have a native print method, but you can use the window.print() method to print the content of the current window.

Example:

<!DOCTYPE html>
<html>
<body>

<button onclick="window.print()">Print this page</button>

</body>
</html>
Explanation:

Clicking the button triggers window.print(), which opens the print dialog for the current page.
Use Case:

Provides a way to print the content of the current webpage.

__________________________________________________________________________________

Summary of JavaScript Output Methods:
innerHTML: Modify content of HTML elements.
document.write(): Write directly to the HTML document (use with caution).
window.alert(): Display an alert box (useful for debugging).
console.log(): Output data to the console (essential for debugging).
window.print(): Print the content of the current window.

__________________________________________________________________________________